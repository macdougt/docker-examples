#!/usr/bin/env perl
# Start docker image with bash
#
# Usage:
#   docs [image name|id]
#
# Sample usage:
#   docs my_image_name
#

my $command;
my $image_name_id = shift;
if ($image_name_id) {
   system "docker run -i -t $image_name_id bash";
} else {
   $command = "docker images --filter 'dangling=false'";

   open (PIPE, "$command |") || die "Sorry, I couldn't open pipe.\n";
   while (<PIPE>) {
      next if /^\s*REPOSITORY/;
      chomp($_);
      push(@list, $_);
   }
   close PIPE;

   my $chosen_image_info = &getPick(\@list);
   print "Bashing $chosen_image_info\n";

   # Get the ID of the chosen image
   my $chosen_id = substr($chosen_image_info, 0, index($chosen_container_info, "\s"));
   my $chosen_name = (split /\s/, $chosen_image_info)[-1];
   print "docker run -i -t $chosen_id bash  [$chosen_name]\n";
   system "docker run -i -t $chosen_id bash";
}
# Print an interactive choice from a given list
sub getPick {
   my $ra_list = shift;
   if ($#{$ra_list} > 0) {
        print STDERR "List:\n";
        for (my $i=0; $i <= $#{$ra_list}; $i++) {
           print STDERR ($i+1);
           print STDERR ") $$ra_list[$i]\n";
        }
        print STDERR "Make your choice\n";
        my $choice = <>;
        if ($choice =~ /\d+/) {
           return $$ra_list[$choice-1];
        }
   } elsif ($#{$ra_list} == 0) {
        return $$ra_list[0];
   } else {
        print STDERR "No list\n";
   }
}
